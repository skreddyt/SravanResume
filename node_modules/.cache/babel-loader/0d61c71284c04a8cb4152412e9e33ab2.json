{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { drawDOM, exportPDF } from '@progress/kendo-drawing';\nimport { saveAs } from '@progress/kendo-file-saver';\nimport { getPageMargin } from './getPageMargin';\nimport KendoDrawingAdapter from './KendoDrawingAdapter';\n/**\n * Represents the KendoReact PDFExport component.\n */\n\nvar PDFExport =\n/** @class */\nfunction (_super) {\n  __extends(PDFExport, _super);\n\n  function PDFExport() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  PDFExport.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(\"div\", {\n      ref: function (el) {\n        _this.rootElForPDF = el;\n      }\n    }, this.props.children);\n  };\n  /**\n   * Saves the content as a PDF file.\n   *\n   * @param callback - The callback to be executed after the PDF is saved.\n   */\n\n\n  PDFExport.prototype.save = function (callback) {\n    new KendoDrawingAdapter(drawDOM, exportPDF, saveAs, this.rootElForPDF, this.getOptions()).savePDF(callback);\n  };\n\n  PDFExport.prototype.getOptions = function () {\n    return Object.assign({}, this.props, {\n      margin: getPageMargin(this.props)\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  PDFExport.propTypes = {\n    author: PropTypes.string,\n    avoidLinks: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    forcePageBreak: PropTypes.string,\n    keepTogether: PropTypes.string,\n    creator: PropTypes.string,\n    date: PropTypes.instanceOf(Date),\n    imageResolution: PropTypes.number,\n    fileName: PropTypes.string,\n    forceProxy: PropTypes.bool,\n    keywords: PropTypes.string,\n    landscape: PropTypes.bool,\n    margin: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.shape({\n      left: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      top: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      right: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      bottom: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    })]),\n    pageTemplate: PropTypes.any,\n    paperSize: PropTypes.any,\n    repeatHeaders: PropTypes.bool,\n    scale: PropTypes.number,\n    proxyData: PropTypes.any,\n    proxyURL: PropTypes.string,\n    proxyTarget: PropTypes.string,\n    producer: PropTypes.string,\n    subject: PropTypes.string,\n    title: PropTypes.string\n  };\n  return PDFExport;\n}(React.Component);\n\nexport default PDFExport;","map":null,"metadata":{},"sourceType":"module"}