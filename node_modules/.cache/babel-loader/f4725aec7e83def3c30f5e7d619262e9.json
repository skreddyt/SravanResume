{"ast":null,"code":"import LRUCache from './lru-cache';\nimport { Class } from '../common';\nimport { objectKey, hashKey, normalizeText } from './util';\n\nfunction zeroSize() {\n  return {\n    width: 0,\n    height: 0,\n    baseline: 0\n  };\n}\n\nvar DEFAULT_OPTIONS = {\n  baselineMarkerSize: 1\n};\nvar defaultMeasureBox;\n\nif (typeof document !== \"undefined\") {\n  defaultMeasureBox = document.createElement(\"div\");\n  defaultMeasureBox.style.cssText = \"position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;\" + \"padding: 0 !important; margin: 0 !important; border: 0 !important;\" + \"line-height: normal !important; visibility: hidden !important; white-space: pre!important;\";\n}\n\nvar TextMetrics = function (Class) {\n  function TextMetrics(options) {\n    Class.call(this);\n    this._cache = new LRUCache(1000);\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n  }\n\n  if (Class) TextMetrics.__proto__ = Class;\n  TextMetrics.prototype = Object.create(Class && Class.prototype);\n  TextMetrics.prototype.constructor = TextMetrics;\n\n  TextMetrics.prototype.measure = function measure(text, style, options) {\n    if (options === void 0) options = {};\n\n    if (!text) {\n      return zeroSize();\n    }\n\n    var styleKey = objectKey(style);\n    var cacheKey = hashKey(text + styleKey);\n\n    var cachedResult = this._cache.get(cacheKey);\n\n    if (cachedResult) {\n      return cachedResult;\n    }\n\n    var size = zeroSize();\n    var measureBox = options.box || defaultMeasureBox;\n\n    var baselineMarker = this._baselineMarker().cloneNode(false);\n\n    for (var key in style) {\n      var value = style[key];\n\n      if (typeof value !== \"undefined\") {\n        measureBox.style[key] = value;\n      }\n    }\n\n    var textStr = options.normalizeText !== false ? normalizeText(text) : String(text);\n    measureBox.textContent = textStr;\n    measureBox.appendChild(baselineMarker);\n    document.body.appendChild(measureBox);\n\n    if (textStr.length) {\n      size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n      size.height = measureBox.offsetHeight;\n      size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n    }\n\n    if (size.width > 0 && size.height > 0) {\n      this._cache.put(cacheKey, size);\n    }\n\n    measureBox.parentNode.removeChild(measureBox);\n    return size;\n  };\n\n  TextMetrics.prototype._baselineMarker = function _baselineMarker() {\n    var marker = document.createElement(\"div\");\n    marker.style.cssText = \"display: inline-block; vertical-align: baseline;width: \" + this.options.baselineMarkerSize + \"px; height: \" + this.options.baselineMarkerSize + \"px;overflow: hidden;\";\n    return marker;\n  };\n\n  return TextMetrics;\n}(Class);\n\nTextMetrics.current = new TextMetrics();\nexport default TextMetrics;","map":null,"metadata":{},"sourceType":"module"}