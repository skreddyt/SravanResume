{"ast":null,"code":"import * as React from 'react';\nimport * as ReactDOMServer from 'react-dom/server';\nvar defaultFileName = 'export.pdf';\nvar defaultCreator = 'Kendo UI PDF Generator';\n/**\n * @hidden\n */\n\nvar KendoDrawingAdapter =\n/** @class */\nfunction () {\n  function KendoDrawingAdapter(drawDOM, exportPDF, saveAs, domElement, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _this = this;\n\n    this.drawDOM = drawDOM;\n    this.exportPDF = exportPDF;\n    this.saveAs = saveAs;\n    this.domElement = domElement;\n    this.options = options;\n\n    this.convertPageTemplateToHtml = function (pageContext) {\n      var pageTemplateContent = ReactDOMServer.renderToStaticMarkup(React.createElement(_this.options.pageTemplate, {\n        pageNum: pageContext.pageNum,\n        totalPages: pageContext.totalPages\n      }));\n      return \"<span>\" + pageTemplateContent + \"</span>\";\n    };\n  }\n\n  KendoDrawingAdapter.prototype.savePDF = function (callback) {\n    var _this = this;\n\n    var savePromise = this.drawDOM(this.domElement, this.getDrawOptions()).then(function (group) {\n      return _this.exportPDF(group, _this.getPDFOptions());\n    }).then(function (dataUri) {\n      return _this.saveAs(dataUri, _this.options.fileName || defaultFileName, _this.getSaveOptions());\n    });\n\n    if (callback) {\n      savePromise.then(callback, callback);\n    }\n  };\n\n  KendoDrawingAdapter.prototype.getDrawOptions = function () {\n    return {\n      avoidLinks: this.options.avoidLinks,\n      forcePageBreak: this.options.forcePageBreak,\n      keepTogether: this.options.keepTogether,\n      margin: this.options.margin,\n      paperSize: this.options.paperSize,\n      landscape: this.options.landscape,\n      repeatHeaders: this.options.repeatHeaders,\n      scale: this.options.scale,\n      template: this.options.pageTemplate && this.convertPageTemplateToHtml\n    };\n  };\n\n  KendoDrawingAdapter.prototype.getPDFOptions = function () {\n    return {\n      author: this.options.author,\n      creator: this.options.creator || defaultCreator,\n      date: this.options.date,\n      imgDPI: this.options.imageResolution,\n      keywords: this.options.keywords,\n      landscape: this.options.landscape,\n      margin: this.options.margin,\n      multiPage: true,\n      paperSize: this.options.paperSize,\n      producer: this.options.producer,\n      subject: this.options.subject,\n      title: this.options.title\n    };\n  };\n\n  KendoDrawingAdapter.prototype.getSaveOptions = function () {\n    return {\n      forceProxy: this.options.forceProxy,\n      proxyData: this.options.proxyData,\n      proxyTarget: this.options.proxyTarget,\n      proxyURL: this.options.proxyURL\n    };\n  };\n\n  return KendoDrawingAdapter;\n}();\n\nexport default KendoDrawingAdapter;","map":null,"metadata":{},"sourceType":"module"}